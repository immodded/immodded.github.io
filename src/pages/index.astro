---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import siteConfig from "../site.config.js";
import backupreos from "../data/backup-repos.json";

let repos = [];
try {
	const response = await fetch(
		`https://api.github.com/users/${siteConfig.username}/repos`,
	);
	if (!response.ok) {
		throw new Error("GitHub API request failed");
	}
	repos = await response.json();
	console.log("fetching from API");
} catch (error) {
	console.log(error);
	console.log("Fetching from backupfile");
	repos = backupreos;
}
---

---

<Layout title={`Welcome to ${siteConfig.name}.`}>
	<main>
		<h1><span class="text-gradient">{siteConfig.name}</span></h1>

		<!-- Display GitHub Repositories -->
		<div class="instructions">
			<strong>{siteConfig.description}</strong>
		</div>
		<h2>My Skills</h2>
		<ul class="skills-list">
			{siteConfig.skills.map((skill) => <li>{skill}</li>)}
		</ul>
		<h2>My GitHub Repositories</h2>
		<ul role="list" class="link-card-grid">
			{
				repos.map((repo) => (
					<Card
						href={repo.homepage || repo.html_url}
						title={repo.name}
						body={repo.description || "No description provided."}
						stars={repo.stargazers_count}
						forks={repo.forks_count}
					/>
				))
			}
		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}

	.skills-list {
		list-style-type: none; /* Remove default bullet points */
		padding: 0; /* Remove default padding */
		margin: 0; /* Remove default margin */
		display: flex; /* Flex container to align items horizontally */
		flex-wrap: wrap; /* Wrap items to the next line if necessary */
		gap: 1rem; /* Space between items */
		justify-content: center; /* Center items horizontally */
	}

	.skills-list li {
		background: rgba(
			var(--accent-dark),
			0.2
		); /* Slightly dark background */
		color: rgba(var(--accent-light), 0.9); /* Text color */
		border-radius: 12px; /* Rounded corners */
		padding: 0.5rem 1rem; /* Padding inside each item */
		font-size: 1.2rem; /* Font size */
		font-weight: 600; /* Font weight for emphasis */
		text-align: center; /* Center text */
		transition:
			background 0.3s ease,
			color 0.3s ease; /* Smooth transition for hover effects */
	}

	.skills-list li:hover {
		background: rgba(
			var(--accent-light),
			0.3
		); /* Lighter background on hover */
		color: rgba(var(--accent-dark), 0.9); /* Darker text color on hover */
	}
</style>
